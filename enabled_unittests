# Enabled test list
# test format
# TESTS_LIST["catch2-<binary-name>"]=" 
#        test 1;
#        test 1; 
#        test 3;
#"
# 
# each test is in separate line
# to disable test just rem it by putting # in front of it
# 
# folowing caracters have to be escaped:
# [],
# \[ \] \,

declare -A TESTS_LIST

TESTS_LIST["catch2-actions-registry-tests"]="
    Given actions registry when initialise it incorrectly then verify;
    Given empty actions registry when verify its state then no pending actions;
    Given actions registry when enqueue then check pending action;
    Given actions registry when enqueue then check if action was processed;
    Given actions registry when finished queued action then no pending actions;
    Given actions registry when enqueue multiple actions sequentially then count handled actions;
    Given actions registry when enqueue multiple actions at once then count handled actions;
    Given actions registry when enqueue multiple actions at once then wait for them to expire.;
    Given actions registry when enqueue multiple actions at once then process the specific ones only.;
    Process the specific actions only and skip others.;
"
#---------
TESTS_LIST["catch2-audio-test"]="
    Test audio tags;
    Audio settings string creation;
    Test AudioMux;
"
#---------
TESTS_LIST["catch2-calculator"]="
    Calculator utilities;
    Scenario: Input Processor tests;
"
#---------
TESTS_LIST["catch2-callback-storage-test"]="
    CallbackStorageTests;
"
#---------
TESTS_LIST["catch2-cellular-datatransfer"]="
    Quectel AT DataTransfer commands;
"
#---------
TESTS_LIST["catch2-cellular-parse-result"]="
    CSCA parser test;
    CSCA set data;
    QECCNUM parser;
    CLCC parser;
    CLCC set data;
    CLCC conversion methods;
    CFUN parser;
    CFUN set data;
"
#---------
TESTS_LIST["catch2-cellular-qmbn"]="
    Quectel MBN test;
"
#---------
TESTS_LIST["catch2-cellular-request-factory"]="
    Emergency handling;
    MMI requests;
"
#---------
TESTS_LIST["catch2-cellular-response"]="
    Response COPS;
    Response CLIR;
    Response CLIP;
    Response CLCK;
    Response CCWA?;
    Response CCFC;
    Response QCFG IMS;
"
#---------
TESTS_LIST["catch2-cellular-simcard"]="
    SimCard functionality test;
"
#---------
TESTS_LIST["catch2-cellular-URC"]="
    +Qind: csq;
    +Qind: FOTA;
    +Cusd;
    +Ctze;
    +Creg;
    +Cmti;
    +CLIP;
    +CPIN;
    POWERED DOWN;
    Urc RESPONSE;
    +Qind: SMS DONE;
    +Qiurc: TCP Context and connection message;
    RING;
"
#---------
TESTS_LIST["catch2-commands-queue-tests"]="
    DrawCommandsQueueTests;
"
#---------
TESTS_LIST["catch2-context-pool-tests"]="
    ContextPoolTests;
"
#---------
TESTS_LIST["catch2-db"]="
    Alarms Record tests;
    Alarms Table tests;
    Calllog Record tests;
    Calllog Table tests;
    Contact Groups tests;
    Contacts address Table tests;
    Contacts Name Table tests;
    Contacts Number Table tests;
    Contact Record db tests;
    Test contact name formatting;
    Test converting contact data to string;
    Contact record numbers update;
    Contacts Ringtones Table tests;
    Contacts Table tests;
    Events Record tests;
    Notes Record tests;
    Notes Table tests;
    Query interface;
    SMS Record tests;
    SMS Table tests;
    SMS templates Record tests;
    SMS Templates Table tests;
    Thread Record tests;
    Threads Table tests;
    Notifications Table tests;
    Notifications Record tests;
"
#---------
TESTS_LIST["catch2-db-initializer"]="
    Create and destroy simple database;
    Database initialization scripts;
"
#---------
TESTS_LIST["catch2-system_messages-tests"]="
    Test basic messages constructors;
    Test message MessageUID provider class;
    Test message transmission required fields validators - response;
    Test message transmission required fields validators - unicast;
    Test message transmission required fields validators - broadcast;
    Test message transmission required fields validators - multicast;
"
#---------
TESTS_LIST["catch2-dependency-graph-tests"]="
    Given Dependency Graph When topological sort empty graph then verify if result is empty;
    Given Dependency Graph When topological sort without dependencies then verify order;
    Given Dependency Graph When topological sort simple case then verify order;
    Given Dependency Graph When topological sort all depending on one then verify order;
    Given Dependency Graph When topological sort advanced case then verify order 1;
    Given Dependency Graph When topological sort advanced case then verify order 2;
    Given Dependency Graph When topological sort on directed cyclic graph then verify order;
"
#---------
TESTS_LIST["catch2-entry-path"]="
    Entry Path - is less comparison - different settings scope;
    Entry Path - is less comparison - Global scope;
    Entry Path - is less comparison - AppLocal scope;
    Entry Path - std::map::find - EGD-6486;
"
#---------
TESTS_LIST["catch2-gui"]="
    Test BoundingBox intersect;
    Are fonts loaded;
    Draw window with labels;
    Draw window with box layouts;
    test context size and position;
    insertContextTest;
    gui::Item on input flow test;
    gui::Window on input flow test;
    Set size tests;
    Constructing with empty image name;
    Setting an empty image name;
    Setting an incorrect image name;
    Setting an incorrect image id;
    Parsing English input language;
    Parsing numeric keyboard;
    Getting charKey after clicking button twice;
"
#---------
TESTS_LIST["catch2-gui-text"]="
    Text ctor;
    Text drawLines;
    Text buildDrawList;
    handle input mode ABC/abc/1234;
    handle longpress for digit in ABC mode;
    handle text expand;
    handle newline;
    handle text block - moved cursor to end;
    Text backup overwrite and restore tests;
    Text backup with max width restricted - overwrite restore and add tests;
    Text addition bounds - text sings count restricted;
    Text addition bounds - text widget size restricted;
    Text addition bounds - text widget line size restricted;
    Text addition bounds - multiple limits tests;
    Text newline navigation and deletion tests;
    RichText newline and empty lines tests;
    TextBlock Ctor/Dtor ;
    Text block - set/update/get text;
    Text block - remove text;
    Text block - get width;
    Text BlockCursor Ctor/Dtor ;
    TextDocument <-> BlockCursor fencing tests;
    TextDocument <-> BlockCursor operators: +\, ++\, -\, -- tests;
    add Char to empty;
    add Char;
    remove Char in empty;
    remove Char;
    add newline;
    add newline at the end;
    atEOL();
    operator-> for Text block with text;
    operator* for TextBlock;
    TextDocument ctor;
    TextDocument getBlockCursor;
    TextLine - ctor;
    TextLine - non fitting text;
    TextLine - multiple styles text;
    TextLine - elements sizes checkup;
    TextParse;
    Testo Font;
    TextLineCursor - navigation without scroll;
    TextLineCursor - navigation with scroll;
    TextLineCursor - addition and deletion with scroll;
    TextFixedSize drawLines;
    TextFixedSize remove Char;
"
#---------
TESTS_LIST["catch2-PowerManager"]="
    Power Manager CPU sentinels governor test;
"
#---------
TESTS_LIST["catch2-render-cache-tests"]="
    Render cache - default initialized;
    Render cache - cache;
    Render cache - cache and invalidate;
    Render cache - exchange cached item;
"
#---------
TESTS_LIST["catch2-service-db"]="
    DB_API;
    Settings Messages;
    Quotes;
    Factory Settings;
"
#---------
TESTS_LIST["catch2-service-db-settings"]="
    SettingsApi;
"
#---------
TESTS_LIST["catch2-service-desktop"]="
    Parser Test;
    DB Helpers test - json decoding;
    DB Helpers test - json encoding (contacts);
    DB Helpers test - json encoding (messages);
    Context class test;
    Endpoint Factory test;
    Secured Endpoint Factory test;
"
#---------
TESTS_LIST["catch2-service-desktop-endpoint-contacts"]="
    Endpoint Contacts Test;
"
#---------
TESTS_LIST["catch2-service-evtmgr"]="
    ScreenLightControlFunctions;
"
#---------
TESTS_LIST["catch2-StatefulController-tests"]="
    Given StatefulController when turn on then turned on;
    Given StatefulController when error during device registration then turned off;
    Given StatefulController when error during driver init then turned off;
    Given StatefulController when error during driver run then turned off;
    Given StatefulController when restart then don't init twice;
    Given StatefulController when turn off in off state then turned off;
    Given StatefulController when turn off in on state then turned off;
    Given StatefulController when shutdown in off state then terminated;
    Given StatefulController when shutdown in on state then terminated;
    Given StatefulController when process command successfully then turned on;
    Given StatefulController when processing command failed then restarted and turned on;
"
#---------
TESTS_LIST["catch2-unittest_ATStream"]="
    Channel Test- AT return parser;
"
#---------
TESTS_LIST["catch2-utils"]="
    Split tests;
    toNumeric tests;
    findAndReplaceAll tests;
    Converts enum to string;
    Get value from string;
    Swap endianness;
    Floating point to string;
    Integer types to string;
    Fill leading digit in string;
    Hex to bytes;
    Bytes to hex;
"
#---------
TESTS_LIST["catch2-utils-clipboard"]="
    Clipboard;
"
#---------
TESTS_LIST["catch2-utils-conditional-invoke-tests"]="
    Successful global function call;
    Failed global function call;
    Successful class static function call;
    Failed class static function call;
    Successful class member function call;
    Failed class member function call;
"
#---------
TESTS_LIST["catch2-utils-duration"]="
    Duration - creation;
    Duration - arithemtics;
    Duration - comparision;
    Duration - display;
"
#---------
TESTS_LIST["catch2-utils-log"]="
    Log tests;
"
#---------
TESTS_LIST["catch2-utils-i18n"]="
    Test set display language - empty display language string;
    Test set display language - invalid display language string;
    Test set display language - double invalid display language string;
    Test set display language - set display language with valid string;
    Test set display language - set display language with valid string and try to invalidate;
    Test get string method - no display language set;
    Test get string method - invalid display language set;
    Test get string method - valid display language set;
"
#---------
TESTS_LIST["catch2-utils-loggerbuffer"]="
    LoggerBuffer tests;
"
#---------
TESTS_LIST["catch2-utils-math"]="
    Math;
"
#---------
TESTS_LIST["catch2-utils-phonenumber"]="
    PhoneNumber - parsing;
    PhoneNumber - formatting;
    PhoneNumber - views;
    PhoneNumber - equality;
    PhoneNumber - matching;
    PhoneNumber - record validation;
    Number matcher - basics;
    Number matcher - match incoming (full list);
    Number matcher - match incoming (loose);
"
#---------
TESTS_LIST["catch2-utils-time_display"]="
    Time display parser;
"
#---------
TESTS_LIST["catch2-utils-ucs2"]="
    UCS2 to UTF8 conversion;
    UCS2 from UTF8 emoji 😁;
    UCS2 from UTF8 emoji 🍣;
    UCS2 text with emojis int the middle from UTF8 code;
    UTF8 to UCS2 conversion;
    TEST special input characters from UTF8;
    TEST special input characters from std::string;
    UTF8 emoji 🍣 from UCS2 code;
    UTF8 emoji 😁 and text ęą from UCS2 code;
    UTF8 emoji 😁 and text abc from UCS2 code;
    UTF8 text with emojis int the middle from UCS2 code;
    UCS2 to UTF8 long string conversion;
    UTF8 to UCS2 long string conversion;
"
#---------
TESTS_LIST["catch2-utils-utf8"]="
    UTF8: operator index returns value;
    UTF8: operator index exceeds string size;
    UTF8: operator== returns properly;
    UTF8: substr returns empty string when zero length is passed;
    UTF8: substr returns empty string when length is exceeded;
    UTF8: substr returns proper begin char;
    UTF8: substr returns proper string length;
    UTF8: find returns npos if not found;
    UTF8: find returns npos if pos exceeds string length;
    UTF8: find returns position of passed string;
    UTF8: find returns position of passed string when pos is passed;
    UTF8: findLast returns npos if not found;
    UTF8: findLast returns npos if pos exceeds string length;
    UTF8: findLast returns position of passed string;
    UTF8: findLast returns position of passed string when pos is passed;
    UTF8: split returns empty object if idx exceeds string length;
    UTF8: split returns propper string;
    UTF8: split strings have propper length after split;
    UTF8: split summary length is equal after split;
    UTF8: getLine returns empty string if its not line;
    UTF8: getLine returns proper string when line ends with n;
    UTF8: getLine returns proper string when line ends with r;
    UTF8: removeChar returns false when string to remove exceed;
    UTF8: removeChar returns false when pos to remove exceed;
    UTF8: removeChar returns propper string;
    UTF8: getChar;
    UTF8: encode / decode / how it works;
    UTF8 bad case scenario - operator\[\] returns;
    U8char && UTF8: encode;
    UTF8: insert whole string which doesn't work;
    UTF8: Convert to ascii if is ascii combination;
    UTF8: Not ASCII combination;
"
#---------
TESTS_LIST["catch2-vfs-core-fs"]="
    Corefs: Registering and unregistering block device;
    Corefs: Basic API test;
    Corefs: Create new file\, write\, read from it;
    Corefs: Register null filesystem;
    Corefs: Mount empty strings;
    Corefs: Write to not valid file descriptor;
    Corefs: Directory operations;
    Corefs: Read only filesystem;
    Corefs: Remount filesystem from RO to RW and to RO;
    Corefs: Autodetect filesystems;
    Corefs: Unittest integrated subsystem;
"
#---------
TESTS_LIST["catch2-vfs-disk"]="
    Registering and unregistering device;
    Parsing and checking partititons;
    Parsing and checking extended partititons;
    Parsing and checking invalid partititons;
    RW boundary checking;
    Null pointer passed to disk manager functions;
    Boundary checks for partitions;
    Disk sectors out of range for partition;
    Alternative partitions in the disk manager;
    Disk manager EEPROM emulation;
"
#---------
TESTS_LIST["catch2-vfs-littlefs"]="
    littlefs: Basic mount and functionality;
    littlefs: Read tests;
    littlefs: Write tests;
    littlefs: Read-only filesystem tests;
    littlefs: Directory tests;
    littlefs: Remount RO->RW->RW;
"
#---------
TESTS_LIST["catch2-vfs-dualmount"]="
    dualmount: Basic mount;
    dualmount: API tests;
"
#---------
TESTS_LIST["catch2-iosyscalls"]="
    VFS linux support;
"
#---------
TESTS_LIST["catch2-vfs-inotify"]="
   Notifier base class test;
   Filtering test;
"
#---------
TESTS_LIST["catch2-cellular-cmux"]="
    TS0170 frame;
"
#---------
TESTS_LIST["catch2-unittest_ATURCStream"]="
    URC AT Stream Parser;
"
#---------
TESTS_LIST["catch2-module-bsp"]="
    BatteryChargerUtilsTest;
"
#---------
TESTS_LIST["catch2-audio-volume-scaler"]="
    Scenario: Scale volume levels between system and bluetooth;
"
#---------
TESTS_LIST["catch2-unittest_CellularResult"]="
    CellularResult;
"
#---------
TESTS_LIST["catch2-settings-Settings"]="
    Settings - not initialized;
    Settings - initialized;
    Interface - not initialized;
    Interface - initialized;
    Interface - expired;
    Interface - copied;
"
#---------
TESTS_LIST["catch2-timezone-handler"]="
    Not known timezone;
"
#---------


