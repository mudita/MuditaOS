name: CI

on: [pull_request]

jobs:
  build:
    runs-on: self-hosted
    steps:
    - name: Check Out
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GitHub_PAT }}
        submodules: recursive
        fetch-depth: 0
    - name: "Copyright notice check"
      run: |
        config/license_header_check.sh --ci --check-only
    - name: "Style checking"
      run: |
        ./config/style_check_hook.sh --last
    - name: "Unit Tests"
      run: |
        ./configure.sh linux Debug && \
        pushd build-linux-Debug && \
        export JOBS=${JOBS:-`nproc`} &&\
        echo "JOBS=${JOBS}" &&\
        make -j ${JOBS} &&\
        make -j ${JOBS} check && \
        popd 
    - name: "Check for statics"
      run: |
        ./tools/find_global_data.py build-linux-Debug/PurePhone.elf
    - name: "Build for RT1051"
      run: |
        ./configure.sh rt1051 Release && \
        pushd build-rt1051-Release && \
        export JOBS=${JOBS:-`nproc`} && \
        echo "JOBS=${JOBS}" && \
        make -j ${JOBS} && \
        popd && \
        uptime

  simulator_tests:
    name: simulator tests
    runs-on: self-hosted
    steps:
      - name: clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: build emulator
        run: |
          ./configure.sh linux Debug && \
          pushd build-linux-Debug && \
          export JOBS=${JOBS:-`nproc`} && \
          echo "JOBS=${JOBS}" && \
          make -j ${JOBS} && \
          popd && \
          uptime

      - name: start emulator
        run: |
          ./run_emulator_on_filesystem_image.sh 2>&1 > emulator.log &
          echo $! > emulator.pid

      - name: run tests
        run: pytest ./pytest -rP --port=simulator --timeout=20 -m 'not rt1051'
        working-directory: test

      - name: kill emulator
        run: |
          kill $(cat emulator.pid)
          rm emulator.pid
        if: always()

      - name: print emulator logs
        run: cat emulator.log
        if: always()
